) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right") +
g12 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
g12 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g12, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ffd1a9", high = "#590000", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
deaths <- covid_data_tbl %>%
# Group
group_by(countriesAndTerritories) %>%
# summarise(total_deaths = sum(deaths)) %>%
summarise(`Mortality Rate` = sum(deaths) / popData2019) %>%
ungroup() %>%
# Rename
mutate(across(countriesAndTerritories, str_replace_all, "_", " ")) %>%
mutate(countriesAndTerritories = case_when(
countriesAndTerritories == "United Kingdom" ~ "UK",
countriesAndTerritories == "United States of America" ~ "USA",
countriesAndTerritories == "Czechia" ~ "Czech Republic",
TRUE ~ countriesAndTerritories
))
plot_data <- world %>%
left_join(deaths, by = c(region = "countriesAndTerritories"))
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#FCD0BA", high = "2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#FCD0BA", high = "#2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
# scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
scale_fill_gradient(low = "#ffc305", high = "#581845", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
# scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
scale_fill_gradient(low = "#ea9696", high = "#400d0d", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
?read_rds
install.packages("tidyverse")
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_version()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(c("arm", "bslib", "cpp11", "data.table", "datawizard", "digest", "gender", "Hmisc", "hms", "htmlTable", "igraph", "knitr", "lattice", "lifecycle", "lubridate", "maps", "MCMCpack", "mgcv", "mime", "misc3d", "msm", "mvtnorm", "optimx", "pillar", "plm", "raster", "rbibutils", "RcppArmadillo", "readr", "remotes", "robustbase", "robustlmm", "shiny", "stringi", "tibble", "tidyr", "tinytex", "viridis"))
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
logdown::install_hugo()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
usethis::use_git_config(user.name = "christophihl", user.email = "christoph.ihl@tuhh.de")
credentials::set_github_pat("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")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
usethis::use_git_config(user.name = "christophihl", user.email = "christoph.ihl@tuhh.de")
credentials::set_github_pat("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")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
blogdown::check_site()
blogdown::check_site()
blogdown::check_site()
blogdown::config_Rprofile()
blogdown:::serve_site()
blogdown::install_hugo("0.66.0")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
a = 4
b = 1.5
c = 3
f1 <- function(x) a * exp(b * x + c))
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -10, to = 20)
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -5, to = 20)
a = 1
b = 1.5
c = 3
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -5, to = 20)
a = 1
b = 1.5
c = 3
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -5, to = 20)
a = 1
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -5, to = 20)
a = 1
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -5, to = 5)
curve(f1, from = -2, to = 5)
curve(f1, from = -2, to = 2)
a = 0.2
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -2, to = 2)
?curve
a = 1
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -2, to = 2)
a = -0.1
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -2, to = 2)
curve(f1, from = 0, to = 2)
a = -2
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 2
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 3
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = -0.3
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -3
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -5
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -100
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = 100
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -10
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -10, to = 2)
b = -0.1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = -10, to = 2)
a = 1
b = -0.1
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -0.5
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -0
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = -0.000001
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
b = 0.000001
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
c = 1
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 1
c = 1
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
c = 0
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
c = 1
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 1
c = 2
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
a = 1
b = 1
c = 3
f1 <- function(x) a * exp(b * x + c)
curve(f1, from = 0, to = 2)
