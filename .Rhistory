# theme(legend.position = "none") +
scale_fill_gradient(low = "#ecca00", high = "#ec0000", labels = scales::percent) +
labs(
title = "Map of COVID",
subtitle = "USA is worst"
)
plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.2) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ecca00", high = "#ec0000", labels = scales::percent) +
labs(
title = "Map of COVID",
subtitle = "USA is worst",
x = "",
y = ""
)
plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.2) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ecca00", high = "#ec0000", labels = scales::percent) +
labs(
title = "Map of COVID",
subtitle = "USA is worst"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.2) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ecca00", high = "#ec0000", labels = scales::percent) +
labs(
title = "Map of COVID",
subtitle = "USA is worst"
) +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank())
g <- covid_plot_data %>%
# Canvas
ggplot() +
# Geoms
geom_line(data      = covid_plot_data %>% filter(continentExp %in% "Europe"),
aes(x     = date,
y     = cum_cases_continent,
color = continentExp)) +
geom_line(data      = covid_plot_data %>% filter(countriesAndTerritories %in% c("Germany", "France", "Spain", "United_States_of_America", "United_Kingdom")),
aes(x     = date,
y     = cum_cases_country,
color = countriesAndTerritories)) +
# Labels
geom_label_repel(aes(x       = date,
y       = cum_cases_continent,
label   = scales::comma(cum_cases_continent,
big.mark     = ".",
decimal.mark = ",")),
data    = covid_plot_data %>% filter(continentExp == "Europe") %>% slice_max(cum_cases_continent),
nudge_x = -35,
size    = 4,
fill   = "#1B9E77",
color  = "white")  +
geom_label_repel(aes(x     = date,
y     = cum_cases_country,
label = scales::comma(cum_cases_country,
big.mark     = ".",
decimal.mark = ",")),
data = covid_plot_data %>% filter(countriesAndTerritories == "United_States_of_America") %>% slice_max(cum_cases_country),
nudge_x = -35,
size    = 4,
fill    = "#E6AB02",
color   = "white")  +
# Formatting
scale_x_date(breaks = "1 month", date_labels = "%B") +
scale_y_continuous(labels = scales::number_format(scale = 1/1e6, big.mark = ".", decimal.mark = ",", suffix = " M")) +
scale_color_brewer(palette="Dark2") +
tidyquant::theme_tq() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(
title    = "CVOID-19 cofirmed cases worldwide",
subtitle = "As of 11/02/2020, Europe had more cases than the USA",
color    = "Continent / Country",
x        = "Year 2020",
y        = "Cumulative Cases"
)
g13 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g13, filename = "static/img/courses/dat_sci/05/challenge_1.png",  bg = "transparent", width = 10, height = 7.5)
covid_data_tbl %>% colSums(deaths)
covid_data_tbl %>% colSums(deaths, na.rm = T)
covid_data_tbl %>% summarise(deaths)
covid_data_tbl %>% sum(deaths)
sum(covid_data_tbl$deaths)
covid_data_tbl %>% sum(deaths)
covid_data_tbl %>% sum(deaths)
covid_data_tbl %>% sum(.$deaths)
covid_data_tbl %>% rowwise() %>% sum()
covid_data_tbl %>% select(deaths) %>% rowwise() %>% sum()
covid_data_tbl %>% summarise(deaths)
covid_data_tbl %>% summarise(across(deaths, sum))
plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.2) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ffe8e8", high = "#ff0000", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank())
plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.2) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank())
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank())
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank()) +
tidyquant::theme_tq()
g
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right") +
g12 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right") +
g12 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
g12 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
axis.ticks            = element_line(color = "white"),
axis.text             = element_text(color  = "white"),
# axis.line             = element_blank(),
axis.title            = element_text(color  = "white", face = "bold", size = 18), # adding a black line for x and y axis
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g12, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ee4540", high = "#2d142c", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = death_ratio), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#ffd1a9", high = "#590000", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
deaths <- covid_data_tbl %>%
# Group
group_by(countriesAndTerritories) %>%
# summarise(total_deaths = sum(deaths)) %>%
summarise(`Mortality Rate` = sum(deaths) / popData2019) %>%
ungroup() %>%
# Rename
mutate(across(countriesAndTerritories, str_replace_all, "_", " ")) %>%
mutate(countriesAndTerritories = case_when(
countriesAndTerritories == "United Kingdom" ~ "UK",
countriesAndTerritories == "United States of America" ~ "USA",
countriesAndTerritories == "Czechia" ~ "Czech Republic",
TRUE ~ countriesAndTerritories
))
plot_data <- world %>%
left_join(deaths, by = c(region = "countriesAndTerritories"))
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#FCD0BA", high = "2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#FCD0BA", high = "#2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g14 <- g +     theme(
#     line = element_line(color = "red"),
#     rect = element_rect(color = "red"),
panel.background      = element_rect(fill = "transparent"), # bg of the panel
panel.border     = element_blank(),
plot.background       = element_rect(fill = "transparent", color = NA), # bg of the plot
plot.title = element_text(color = "white"),
plot.subtitle = element_text(color = "white"),
plot.caption = element_text(color = "white"),
legend.background = element_blank(),
legend.text           = element_text(color = "white") ,
legend.title = element_text(color = "white"),
legend.key = element_blank()
)
ggsave(g14, filename = "static/img/courses/dat_sci/05/challenge_2.png",  bg = "transparent", width = 10, height = 7.5)
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
# scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
scale_fill_gradient(low = "#ffc305", high = "#581845", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
g <- plot_data %>% ggplot(aes(long, lat)) +
geom_map(aes(map_id = region, fill = `Mortality Rate`), map = world, color = "grey", size = 0.1) +
# theme(legend.position = "none") +
# scale_fill_gradient(low = "#EE4540", high = "#2D142C", labels = scales::percent) +
scale_fill_gradient(low = "#ea9696", high = "#400d0d", labels = scales::percent) +
labs(
title = "Confirmed COVID-19 deaths relative to the size of the population",
subtitle = "More than 1.2 Million confirmed COVID-19 deaths worldwide",
caption  = "Date: 11/02/2020",
color    = "Mortality Rate"
) +
tidyquant::theme_tq() +
theme(axis.title = element_blank(),
axis.text  = element_blank(),
axis.ticks = element_blank(),
legend.position = "right")
g
?read_rds
install.packages("tidyverse")
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_version()
